django 101
https://docs.djangoproject.com/en/3.1/intro/tutorial01/
https://code.visualstudio.com/docs/python/tutorial-django#_work-with-data-data-models-and-migrations
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Generic_views

# Don't forget to filter out results depending on the visitor !

autocomplete:
https://django-autocomplete-light.readthedocs.io/en/master/tutorial.html#filtering-results-based-on-the-value-of-other-fields-in-the-form)

add-another
https://github.com/jonashaag/django-addanother

crispy bootstrap
https://simpleisbetterthancomplex.com/tutorial/2018/08/13/how-to-use-bootstrap-4-forms-with-django.html

using DB views in Django
https://resources.rescale.com/using-database-views-in-django-orm/

Django Calendar
https://www.huiwenteo.com/normal/2018/07/24/django-calendar.html
https://www.huiwenteo.com/normal/2018/07/29/django-calendar-ii.html

git 101
https://rogerdudler.github.io/git-guide/

I can't believe google gave me such a hard time finding this...
https://realpython.com/python-f-strings/

subcategories dropdown
https://simpleisbetterthancomplex.com/tutorial/2018/01/29/how-to-implement-dependent-or-chained-dropdown-list-with-django.html

chart js onclick
https://jsfiddle.net/u1szh96g/208/

jquery versions hash
https://code.jquery.com/jquery/

bootstrap ref
https://getbootstrap.com/docs/4.1

vertical line in line chart
https://stackoverflow.com/questions/30256695/chart-js-drawing-an-arbitrary-vertical-line

modelformset_factory with crispy:
https://dev.to/zxenia/django-inline-formsets-with-class-based-views-and-crispy-forms-14o6

to get formset errors: formset.errors.....

Get current user
https://django-crum.readthedocs.io/en/latest/


icones:
https://fontawesome.cc/
v4
https://fontawesome.com/v4/icons/

https://stackoverflow.com/questions/30067767/how-do-i-collapse-sections-of-code-in-visual-studio-code-for-windows
collapse: Ctrl-k-1
expand Ctrl-k-j


debug form post
    def form_invalid(self, form):
        a = 1
        # form.errors
        return super().form_invalid(form)

    def clean(self, value):
        a = 1
        return super().clean(form)

debug js: just add "debugger;" in the script where you want a breakpoint

class visually-hidden
httpx:
https://testdriven.io/blog/django-async-views/
https://enzircle.com/responsive-table-with-django-and-htmx